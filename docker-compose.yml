services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: api_pedidos
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: senha
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usuario -d api_pedidos"]
      interval: 10s
      timeout: 5s
      retries: 5

  pedido-service:
    build: .
    container_name: pedido_app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy # evitar quebra a aplicação
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/api_pedidos
      SPRING_DATASOURCE_USERNAME: usuario
      SPRING_DATASOURCE_PASSWORD: senha
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      API_SECURITY_TOKEN_SECRET: minha-chave-super-secreta-docker-2025

volumes:
  pgdata: